// <auto-generated />
using System;
using Data.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240315104919_FieldMappingFix")]
    partial class FieldMappingFix
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Data.Database.Entities.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalInfo")
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)")
                        .HasColumnName("additional_info");

                    b.Property<int>("ApiService")
                        .HasColumnType("integer")
                        .HasColumnName("api_service");

                    b.Property<long?>("ExternalId")
                        .HasColumnType("bigint")
                        .HasColumnName("external_id");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("insert_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<int?>("PhotoId")
                        .HasColumnType("integer")
                        .HasColumnName("photo_id");

                    b.HasKey("Id");

                    b.HasIndex("PhotoId");

                    b.ToTable("chats");
                });

            modelBuilder.Entity("Data.Database.Entities.File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalInfo")
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)")
                        .HasColumnName("additional_info");

                    b.Property<int>("ApiService")
                        .HasColumnType("integer")
                        .HasColumnName("api_service");

                    b.Property<int>("AttachType")
                        .HasColumnType("integer")
                        .HasColumnName("attach_type");

                    b.Property<byte[]>("Data")
                        .HasMaxLength(16777216)
                        .HasColumnType("bytea")
                        .HasColumnName("data");

                    b.Property<long?>("ExternalId")
                        .HasColumnType("bigint")
                        .HasColumnName("external_id");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("insert_date");

                    b.Property<int?>("MessageId")
                        .HasColumnType("integer")
                        .HasColumnName("message_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Path")
                        .HasColumnType("text")
                        .HasColumnName("path");

                    b.HasKey("Id");

                    b.HasIndex("MessageId");

                    b.ToTable("files");
                });

            modelBuilder.Entity("Data.Database.Entities.Generation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalInfo")
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)")
                        .HasColumnName("additional_info");

                    b.Property<int>("ApiService")
                        .HasColumnType("integer")
                        .HasColumnName("api_service");

                    b.Property<int>("CompletionTokens")
                        .HasColumnType("integer")
                        .HasColumnName("completion_tokens");

                    b.Property<string>("CompletionType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("completion_type");

                    b.Property<long?>("ExternalId")
                        .HasColumnType("bigint")
                        .HasColumnName("external_id");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("insert_date");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("model");

                    b.Property<string>("Prompt")
                        .IsRequired()
                        .HasMaxLength(65535)
                        .HasColumnType("character varying(65535)")
                        .HasColumnName("prompt");

                    b.Property<int>("PromptTokens")
                        .HasColumnType("integer")
                        .HasColumnName("prompt_tokens");

                    b.Property<float>("RepetitionPenalty")
                        .HasColumnType("real")
                        .HasColumnName("repetition_penalty");

                    b.Property<string>("Responce")
                        .IsRequired()
                        .HasMaxLength(65535)
                        .HasColumnType("character varying(65535)")
                        .HasColumnName("responce");

                    b.Property<float>("Temperature")
                        .HasColumnType("real")
                        .HasColumnName("temperature");

                    b.Property<float>("TopP")
                        .HasColumnType("real")
                        .HasColumnName("top_p");

                    b.HasKey("Id");

                    b.ToTable("generations");
                });

            modelBuilder.Entity("Data.Database.Entities.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalInfo")
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)")
                        .HasColumnName("additional_info");

                    b.Property<int>("ApiService")
                        .HasColumnType("integer")
                        .HasColumnName("api_service");

                    b.Property<long?>("ExternalId")
                        .HasColumnType("bigint")
                        .HasColumnName("external_id");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("insert_date");

                    b.Property<int>("MessageType")
                        .HasColumnType("integer")
                        .HasColumnName("message_type");

                    b.Property<int?>("ReplayMessageId")
                        .HasColumnType("integer")
                        .HasColumnName("replay_message_id");

                    b.Property<DateTime>("SenderDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("sender_date");

                    b.Property<int>("SenderId")
                        .HasColumnType("integer")
                        .HasColumnName("sender_id");

                    b.Property<string>("Text")
                        .HasMaxLength(65535)
                        .HasColumnType("character varying(65535)")
                        .HasColumnName("text");

                    b.HasKey("Id");

                    b.HasIndex("ReplayMessageId");

                    b.HasIndex("SenderId");

                    b.ToTable("messages");
                });

            modelBuilder.Entity("Data.Database.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalInfo")
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)")
                        .HasColumnName("additional_info");

                    b.Property<int>("ApiService")
                        .HasColumnType("integer")
                        .HasColumnName("api_service");

                    b.Property<long?>("ExternalId")
                        .HasColumnType("bigint")
                        .HasColumnName("external_id");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("first_name");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("insert_date");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("last_name");

                    b.Property<int?>("PhotoId")
                        .HasColumnType("integer")
                        .HasColumnName("photo_id");

                    b.Property<int>("UserType")
                        .HasColumnType("integer")
                        .HasColumnName("user_type");

                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.HasIndex("PhotoId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Data.Database.Entities.Chat", b =>
                {
                    b.HasOne("Data.Database.Entities.File", "Photo")
                        .WithMany()
                        .HasForeignKey("PhotoId");

                    b.Navigation("Photo");
                });

            modelBuilder.Entity("Data.Database.Entities.File", b =>
                {
                    b.HasOne("Data.Database.Entities.Message", "Message")
                        .WithMany()
                        .HasForeignKey("MessageId");

                    b.Navigation("Message");
                });

            modelBuilder.Entity("Data.Database.Entities.Message", b =>
                {
                    b.HasOne("Data.Database.Entities.Message", "ReplayMessage")
                        .WithMany()
                        .HasForeignKey("ReplayMessageId");

                    b.HasOne("Data.Database.Entities.User", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReplayMessage");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("Data.Database.Entities.User", b =>
                {
                    b.HasOne("Data.Database.Entities.File", "Photo")
                        .WithMany()
                        .HasForeignKey("PhotoId");

                    b.Navigation("Photo");
                });
#pragma warning restore 612, 618
        }
    }
}
